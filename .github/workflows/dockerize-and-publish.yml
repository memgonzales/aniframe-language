# This workflow is responsible for creating the Docker images
# and publishing them on the GitHub Container registry

name: Create and publish Docker image

on:
    # Trigger workflow when a new release has been published
    push:
        branches:
            - release

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    # Build the images and push them to the GitHub Container registry
    # This job uses the matrix strategy to build and push the images in parallel
    build-and-push-image:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix: # Cannot use env variables inside matrix
                include:
                    - dockerfile: Dockerfile
                      image: ghcr.io/memgonzales/aniframe
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ matrix.image }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to the Container registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  cache-from: type=gha
                  cache-to: type=gha, mode=max
                  file: ${{ matrix.dockerfile }}
                  push: true
                  tags: ${{ matrix.image }}:latest
                  labels: ${{ steps.meta.outputs.labels }}

    on-failure:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        steps:
            - run: echo 'The triggering workflow failed'
